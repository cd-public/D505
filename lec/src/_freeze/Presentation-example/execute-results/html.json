{
  "hash": "1a34c276e8ea276fcfecd9fbaf480a02",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Anatomy of a technical presentation\"\nauthor: \"Jameson Watts, Ph.D.\"\ndate: \"04/25/2020\"\noutput:\n  ioslides_presentation:\n    widescreen: yes\n    incremental: yes\n    df_print: kable\n    fig_width: 10\n---\n\n\n\n<style>\nstrong{\n  color: #018080;\n}\ntable.rmdtable th {\n    color: black;\n    background: #dbc4cA;\n}\ntable.rmdtable td {\n    padding: 0.5em 0.5em;\n}\n</style>\n\n\n## Agenda\n\n1. First I'm going to talk about\n2. Then this happens\n3. This interesting thing comes next\n4. Bam! ...minds blown.\n\n## Overview\n\n- Research question\n- Headline results\n  - Sub result 1\n  - Sub result 2\n- Summary of impact\n\n## Background\n\n- Give folks some understanding of the context within which you are operating\n- Discuss the contextual and/or theoretcial basis for your approach\n\n## Methods (1-3 slides)\n\n- Feature Engineering\n- Model Selection and Tuning\n- Model-level metrics and validity\n\n## Results\n\n- Accuracy, Kappa, etc.\n- Impact of different features\n- How should results be interpreted?\n- Impact on Organization?\n\n## Limitations\n\n- What data do you wish you had?\n- Where are the models failing and why?\n- What is unreliable about the features in your model?\n\n## Conclusion\n\n- Repeat research question\n- Remind audience of the context and justifictions for your method\n- Restate results and impact on organization\n\n## Backup Slides and References\n\n- More technical slides used to help answer questions\n- References to literature justifying your approach\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}