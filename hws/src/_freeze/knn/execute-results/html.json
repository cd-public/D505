{
  "hash": "6297e8e4d8ed755a3fa584bdd5df018b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: $K$NN\nauthor: \"Your name here!\"\ndate: \"02/10/2025\"\n\nformat: \n  html:  # You will quite likely want to change all but the last one, to taste\n    theme: superhero  \n    mainfont: monospace\n    highlight-style: github\n    title-block-banner: true\n    embed-resources: true\n\n---\n\n\n\n**Abstract:**\n\nThis is a technical blog post of **both** an HTML file *and* [.qmd file](https://raw.githubusercontent.com/cd-public/D505/refs/heads/master/hws/src/knn.qmd) hosted on GitHub pages.\n\n# 0. Quarto Type-setting\n\n- This document is rendered with Quarto, and configured to embed an images using the `embed-resources` option in the header.\n- If you wish to use a similar header, here's is the format specification for this document:\n\n```email\nformat: \n  html:\n    embed-resources: true\n```\n\n# 1. Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following object is masked from 'package:purrr':\n\n    lift\n```\n\n\n:::\n\n```{.r .cell-code}\nwine <- readRDS(gzcon(url(\"https://github.com/cd-public/D505/raw/master/dat/pinot.rds\")))\n```\n:::\n\n\n\n## 2. $K$NN Concepts\n\n> <span style=\"color:red;font-weight:bold\">TODO</span>: *Explain how the choice of K affects the quality of your prediction when using a $K$ Nearest Neighbors algorithm.*\n\n## 3. Feature Engineering\n\n1. Create a version of the year column that is a *factor* (instead of numeric).\n2. Create dummy variables that indicate the presence of \"cherry\", \"chocolate\" and \"earth\" in the description.\n  - Take care to handle upper and lower case characters.\n3. Create 3 new features that represent the interaction between *time* and the cherry, chocolate and earth inidicators.\n4. Remove the description column from the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# your code here\n```\n:::\n\n\n## 4. Preprocessing\n\n1. Preprocess the dataframe from the previous code block using BoxCox, centering and scaling of the numeric features\n2. Create dummy variables for the `year` factor column\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# your code here\n```\n:::\n\n\n\n\n## 5. Running $K$NN\n\n1. Split the dataframe into an 80/20 training and test set\n2. Use Caret to run a $K$NN model that uses our engineered features to predict province\n  - use 5-fold cross validated subsampling \n  - allow Caret to try 15 different values for $K$\n3. Display the confusion matrix on the test data\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## 6. Kappa\n\nHow do we determine whether a Kappa value represents a good, bad or some other outcome?\n\n> <span style=\"color:red;font-weight:bold\">TODO</span>: *Explain*\n\n## 7. Improvement\n\nHow can we interpret the confusion matrix, and how can we improve in our predictions?\n\n> <span style=\"color:red;font-weight:bold\">TODO</span>: *Explain*",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}