{
  "hash": "79e06793988ce688fa3abf16ab9598de",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Wines of the PNW\"\nauthor: \"Your name here!\"\ndate: \"01/27/2025\"\n\nformat: \n  html:  # You will quite likely want to change all but the last one, to taste\n    theme: superhero  \n    mainfont: monospace\n    highlight-style: github\n    title-block-banner: true\n\njupyter: python3\n---\n\n\n**Abstract:**\n\nThis is a technical blog post of **both** an HTML file *and* [.qmd file](src/wine_of_pnw_py.qmd) hosted on GitHub pages.\n\n# Setup\n\n1.  Change the author of this QMD file to be yourself and delete this line.\n2.  Modify if necessary the below code so that you can successfully load `wine.rds` then delete this line.\n3.  In the space provided after the Python chunk, explain what thecode is doing (line by line) then delete this line.\n4.  Get your [GitHub Pages](https://docs.github.com/en/pages/quickstart) ready.\n\n**Set Up Python:**\n\n::: {#df2df2f8 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n```\n:::\n\n\n**Set Up R Compatability:**\n\n::: {#6dca8907 .cell execution_count=2}\n``` {.python .cell-code}\n# import pyreadr - no longer needed - keep reading\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\n```\n:::\n\n\n**Step Up Dataframe:**\n- I ran this exactly once.\n```{.python}\nurl = 'https://cd-public.github.io/D505/dat/'\nrds = 'wine.rds'\npyreadr.download_file(url + rds, rds) \nwine = pyreadr.read_r(rds)[None]\n```\n- With a dataframe in hand, I saved to a parquet file.\n  - Parquet is gaining prominence as an open standard, versus the various R formats that are not documented for general use.\n\n```{.python}\nwine.to_parquet(\"wine.parquet\")\n```\n- Then I can use `read_parquet`\n```{.python}\nwine = pd.read_parquet(\"https://github.com/cd-public/D505/raw/master/dat/wine.parquet\")\n```\n- I found this was unexpectly low performance as well, so I switched to the Python specific `pickle` file\n  - The `parquet` and `pandas` libraries have to repackage strings.\n    - This is a string-forward data set so slow.\n  - `pickle` is optimized for `pandas`\n  - Named after the [Portland Pickles](https://www.portlandpicklesbaseball.com/)\n![](https://upload.wikimedia.org/wikipedia/en/c/c0/Portland_Pickles_Logo_2023.png)\n    - I don't know if that's true or not, but it probably isn't.\n\n```{.python}\nwine.to_pickle(\"wine.pickle\")\n```\n- Henceforth I'll use `read_pickle` and its ~100x performance improvement.\n  - Plus, now I can use pandas anywhere - don't need to install *and* import pyreadr, which is not customarily part of the Python data stack.\n- This is the first \"live\" code sell that isn't showing historical cells that were no longer in use, setting up file formats.\n\n::: {#be06c0b8 .cell execution_count=3}\n``` {.python .cell-code}\nwine = pd.read_pickle(\"https://github.com/cd-public/D505/raw/master/dat/wine.pickle\")\n```\n:::\n\n\n- Much faster with a local (that is, non-url) pickle, of course.\n\n- Then simply engineer the features.\n\n::: {#94f6560b .cell execution_count=4}\n``` {.python .cell-code}\nwine = wine[wine['province'].isin(['Oregon', 'California', 'New York'])]\nwine['cherry'] = wine['description'].apply(lambda x: 'herry' in x)\nwine['lprice'] = wine['price'].apply(np.log)\nwine = wine[['lprice', 'points', 'cherry', 'province']]\n```\n:::\n\n\n**Explanation:**\n\n> <span style=\"color:red;font-weight:bold\">TODO</span>: *write your line-by-line explanation of the code here*\n\n# Multiple Regression\n\n## Linear Models\n\nFirst run a linear regression model with log of price as the dependent variable and 'points' and 'cherry' as features (variables).\n\n\n```{r}\n# TODO: hint: m1 <- lm(lprice ~ points + cherry)\n```\n\n\n**Explanataion:**\n\n> <span style=\"color:red;font-weight:bold\">TODO</span>: *write your line-by-line explanation of the code here*\n\n> <span style=\"color:red;font-weight:bold\">TODO</span>: *report and explain the RMSE*\n\n## Interaction Models\n\nAdd an interaction between 'points' and 'cherry'. \n\n\n```{r}\n# TODO: hint: Check the slides.\n```\n\n\n> <span style=\"color:red;font-weight:bold\">TODO</span>: *write your line-by-line explanation of the code here*\n\n> <span style=\"color:red;font-weight:bold\">TODO</span>: *report and explain the RMSE*\n\n### The Interaction Variable\n\n> <span style=\"color:red;font-weight:bold\">TODO</span>: *interpret the coefficient on the interaction variable.* <br>[Explain as you would to a non-technical manager.](https://youtube.com/clip/UgkxY7ohjoimIef6zpPLjgQHqJcJHeZptuVm?feature=shared)\n\n## Applications\n\nDetermine which province (Oregon, California, or New York), does the 'cherry' feature in the data affect price most?\n\n\n```{r}\n# TODO: \n```\n\n\n> <span style=\"color:red;font-weight:bold\">TODO</span>: *write your line-by-line explanation of the code here, and explain your answer.*\n\n# Scenarios\n\n## On Accuracy\n\nImagine a model to distinguish New York wines from those in California and Oregon. After a few days of work, you take some measurements and note: \"I've achieved 91% accuracy on my model!\" \n\nShould you be impressed? Why or why not?\n\n\n```{r}\n# TODO: Use simple descriptive statistics from the data to justify your answer.\n```\n\n\n> <span style=\"color:red;font-weight:bold\">TODO</span>: *describe your reasoning here*\n\n## On Ethics\n\nWhy is understanding this vignette important to use machine learning in an ethical manner?\n\n> <span style=\"color:red;font-weight:bold\">TODO</span>: *describe your reasoning here*\n\n## Ignorance is no excuse\nImagine you are working on a model to predict the likelihood that an individual loses their job as the result of the changing federal policy under new presidential administrations. You have a very large dataset with many hundreds of features, but you are worried that including indicators like age, income or gender might pose some ethical problems. When you discuss these concerns with your boss, she tells you to simply drop those features from the model. Does this solve the ethical issue? Why or why not?\n\n> <span style=\"color:red;font-weight:bold\">TODO</span>: *describe your reasoning here*\n\n",
    "supporting": [
      "wine_of_pnw_py_files"
    ],
    "filters": [],
    "includes": {}
  }
}