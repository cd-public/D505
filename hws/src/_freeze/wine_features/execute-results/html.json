{
  "hash": "2ba4ddbff483e63a4cccfed1e0802811",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Wine Features\"\nauthor: \"Your name here!\"\ndate: \"02/03/2025\"\n\nformat: \n  html:  # You will quite likely want to change all but the last one, to taste\n    theme: superhero  \n    mainfont: monospace\n    highlight-style: github\n    title-block-banner: true\n    embed-resources: true\n\n---\n\n\n\n**Abstract:**\n\nThis is a technical blog post of **both** an HTML file *and* [.qmd file](src/wine_features.qmd) hosted on GitHub pages.\n\n# Setup\n\n1.  Change the author of this RMD file to be yourself and delete this line.\n2.  Modify if necessary the below code so that you can successfully load `wine.rds` then delete this line.\n3.  In the space provided after the R chunk, explain what thecode is doing (line by line) then delete this line.\n4.  Get your [GitHub Pages](https://docs.github.com/en/pages/quickstart) ready.\n\n**Step Up Code:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following object is masked from 'package:purrr':\n\n    lift\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(fastDummies)\nwine <- readRDS(gzcon(url(\"https://github.com/cd-public/D505/raw/master/dat/wine.rds\")))\n```\n:::\n\n\n\n**Explanataion:**\n\n> <span style=\"color:red;font-weight:bold\">TODO</span>: *write your line-by-line explanation of the code here*\n\n# Feature Engineering\n\nWe begin by engineering an number of features.\n\n1. Create a total of 10 features (including points). \n2. Remove all rows with a missing value. \n3. Ensure only log(price) and engineering features are the only columns that remain in the `wino` dataframe.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwino <- wine %>% \n  mutate(lprice=log(price))\n  # engineer features here\n```\n:::\n\n\n\n# Caret\n\nWe now use a train/test split to evaluate the features.\n\n1. Use the Caret library to partition the wino dataframe into an 80/20 split. \n2. Run a linear regression with bootstrap resampling. \n3. Report RMSE on the test partition of the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# TODO: hint: Check the slides.\n```\n:::\n\n\n\n# Variable selection\n\nWe now graph the importance of your 10 features.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# TODO: hint: Check the slides.\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}